name: OCM Integration Tests
# trigger manually
run-name: OCM CLI Integration Tests
on:
  push:
    branches: [gerald-test]
  repository_dispatch:
    types: [ocm_pr]
env:
  REF: main
permissions:
  contents: write
jobs:
  test-ocm:
    runs-on: ubuntu-latest
    steps:
    - name: checkout inttest
      uses: actions/checkout@v3
    - name: get-pr
      if: ${{ github.event.client_payload }}
      run: |
        echo "PR was triggered with payload: pr: ${{ github.event.client_payload.pr }}, ref: ${{ github.event.client_payload.ref }}, sha: ${{ github.event.client_payload.sha }}"
        echo "PR_NUMBER=${{ github.event.client_payload.pr }}" >> $GITHUB_ENV
        echo "SHA=${{ github.event.client_payload.sha }}" >> $GITHUB_ENV
        echo "REF=${{ github.event.client_payload.ref }}" >> $GITHUB_ENV
    - name: get-pr
      if:  ${{ inputs.pr_number }}
      run: |
        echo "get-pr"
        echo "Input was: ${{ inputs.pr_number }}"
        REF="refs/pull/${{ inputs.pr_number }}/head"
        echo "Building OCM from a pull request: ${REF}"
        echo "REF=${REF}" >> $GITHUB_ENV
    - name: debug env
      run: |
        echo "PR_NUMBER=${{ env.PR_NUMBER }}"
        echo "SHA=${{ env.SHA }}"
        echo "REF=${{ env.REF }}"
    - name: checkout ocm
      uses: actions/checkout@v3
      if: ${{ ! inputs.use-release }}
      with:
        repository: open-component-model/ocm
        ref: ${{ env.REF }}
        path: ocm
    - name: get ocm commit
      if: ${{ ! inputs. github.event.client_payload }}
      run: |
        SHA=`git -C ./ocm log -1 --format='%H'`
        echo "Checked out ocm from commit: ${SHA}"
        echo "SHA=${SHA}" >> $GITHUB_ENV
    - name: Generate token
      id: generate_token
      if: ${{ github.event.client_payload }}
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.OCMBOT_APP_ID }}
        private_key: ${{ secrets.OCMBOT_PRIV_KEY }}
    - name: send test result as PR comment
      if: ${{ github.event.client_payload }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ steps.generate_token.outputs.token }}
        script: |
          github.rest.issues.createComment({
            owner: 'open-component-model',
            repo: 'ocm',
            issue_number: ${{ env.PR_NUMBER }},
            body: 'Integration Tests for ${{ env.SHA }} run with result: ${{ env.TEST_RESULT_STR }}!'
            })
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      if: ${{ github.ref_name  == 'gerald-test' }}
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
        # Test-channel-id: 'C057KU48M7Y'
        channel-id: 'C03NF7KH128'
        payload: |
          {
            "text" : "OCM Integration Test Report, Status: ${{ job.status }}",
            "blocks": [
              {
                "type": "section",
                "text":
                  {
                    "type": "mrkdwn",
                    "text": "Testreport OCM CLI: ${{ job.status == 'success' && ':white_check_mark:' || ':x:' }}  <https://open-component-model.github.io/ocm-integrationtest/report-${{ env.SHA }}.html|TestReport>  <https://github.com/open-component-model/ocm-integrationtest/actions/runs/${{ github.run_id }}|Github Action>"
                  }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
